!function(t,i){"function"==typeof define&&define.amd?define([],i):"object"==typeof module&&module.exports?module.exports=i():t.IsometricToolkit=i()}(this,function(){"use strict";function t(t,i){return{x:i+.5*t,y:i-.5*t}}function i(t,i){return{x:t-i,y:.5*(t+i)}}function e(t,i,e,s){return{x:.5*e*(i-t),y:(i+t)*(.5*s)}}function s(t,i,e,s){return{row:i/s-t/e,column:t/e+i/s}}function h(t,i,e,h){let o=s(t,i,e,h);return{column:Math.floor(o.column),row:Math.floor(o.row)}}function o(t,i,e,s,h){t.beginPath(),t.moveTo(i,e),t.lineTo(i+.5*s,e+.5*h),t.lineTo(i,e+h),t.lineTo(i-.5*s,e+.5*h),t.lineTo(i,e),t.closePath()}function Renderer(t){t=t||{},this.tileWidth=t.tileWidth||1,this.tileHeight=t.tileHeight||1,this.offsetX=t.offsetX||0,this.offsetY=t.offsetY||0,this.params=t}function TiledMap(t){t=t||{},this.rows=t.rows||0,this.columns=t.columns||0,this.tileWidth=t.tileWidth||64,this.tileHeight=t.tileHeight||32,this.offsetX=t.offsetX||.5*this.getWidth(),this.offsetY=t.offsetY||0,this.tiles=null,this.params=t}function Tile(t){t=t||{},this.width=t.width||0,this.height=t.height||0,this.offsetHeight=t.offsetHeight||0,this.params=t}return Renderer.prototype={setTileSize:function(t,i){this.tileWidth=parseInt(t)||this.tileWidth,this.tileHeight=parseInt(i)||this.tileHeight},setOffset:function(t,i){this.offsetX=parseInt(t)||this.offsetX,this.offsetY=parseInt(i)||this.offsetY},screenToIsometric:function(t,e){return i(t-this.offsetX,e-this.offsetY)},screenToTile:function(t,i){return h(t-this.offsetX,i-this.offsetY,this.tileWidth,this.tileHeight)},isometricToScreen:function(i,e){let s=t(i,e);return{x:s.x+this.offsetX,y:s.y+this.offsetY}},isometricToTile:function(t,i){let e=.5*(this.tileWidth+this.tileHeight);return{row:Math.floor(i/e),column:Math.floor(t/e)}},tileToScreen:function(t,i){let s=e(t,i,this.tileWidth,this.tileHeight);return{x:s.x+this.offsetX,y:s.y+this.offsetY}},tileToIsometric:function(t,i){let e=.5*(this.tileWidth+this.tileHeight);return{x:i*e,y:t*e}},isPointOnTile:function(t,i,s,o,n){n=n||0;let l=t-this.offsetX,f=i-this.offsetY,r=h(l,f+n,this.tileWidth,this.tileHeight);if(r.row==s&&r.column==o)return!0;if(r.row>=s&&r.column>=o){let t=e(s,o,this.tileWidth,this.tileHeight),i=Math.abs(l-t.x),h=f+n-t.y-n;if(i<.5*this.tileWidth&&h<this.tileHeight*(1+i/this.tileWidth))return!0}return!1},drawTileImage:function(t,i,e,s,h){h=h||0;let o=this.tileToScreen(e,s),n=o.x-.5*this.tileWidth,l=o.y-h,f=this.tileWidth,r=this.tileHeight+h;t.drawImage(i,n,l,f,r)},drawTileShape:function(t,i,e,s){s=s||0;let h=this.tileToScreen(i,e);o(t,h.x,h.y-s,this.tileWidth,this.tileHeight)}},TiledMap.prototype={setDimensions:function(t,i){this.rows=parseInt(t)||this.rows,this.columns=parseInt(i)||this.columns},setTileSize:function(t,i){this.tileWidth=parseInt(t)||this.tileWidth,this.tileHeight=parseInt(i)||this.tileHeight},setOffset:function(t,i){this.offsetX=parseInt(t)||this.offsetX,this.offsetY=parseInt(i)||this.offsetY},getWidth:function(){return(this.rows+this.columns)*this.tileWidth*.5},getHeight:function(){return(this.rows+this.columns)*this.tileHeight*.5},setTiles:function(t){Array.isArray(t)&&Array.isArray(t[0])&&(this.setDimensions(t.length,t[0].length),this.tiles=t)},fill:function(t){this.tiles=new Array(this.rows);for(let i=0;i<this.rows;i++){this.tiles[i]=new Array(this.columns);for(let e=0;e<this.columns;e++)this.tiles[i][e]=t(i,e)}},forEach:function(t){for(let i=0;i<this.rows;i++)for(let e=0;e<this.columns;e++)t(i,e,this.tiles[i][e])},tileToScreen:function(t,i){let s=e(t,i,this.tileWidth,this.tileHeight);return{x:s.x+this.offsetX,y:s.y+this.offsetY}},screenToTile:function(t,i){return h(t-this.offsetX,i-this.offsetY,this.tileWidth,this.tileHeight)},containsTile:function(t,i){return t>=0&&t<this.rows&&i>=0&&i<this.columns},getTile:function(t,i){let e=h(t-this.offsetX,i-this.offsetY,this.tileWidth,this.tileHeight);return this.containsTile(e.row,e.column)?this.tiles[e.row][e.column]:null},getTileWithOffset:function(t,i,e){let s=h(t-this.offsetX,i-this.offsetY,this.tileWidth,this.tileHeight),o=Math.min(this.rows-s.row,this.columns-s.column),n=0,l=0,f=null;for(let h=0;h<o;h++)for(let o=-2;o<=0;o++)n=s.row+h+(.5*o|0),l=s.column+h+o%2,this.isPointOnTile(t,i,n,l,e)&&(f={row:n,column:l});return null!=f&&this.containsTile(f.row,f.column)?this.tiles[f.row][f.column]:null},isPointOnTile:function(t,i,s,o,n){if(this.containsTile(s,o)){let l=n(this.tiles[s][o])||0,f=t-this.offsetX,r=i-this.offsetY,u=h(f,r+l,this.tileWidth,this.tileHeight);if(u.row==s&&u.column==o)return!0;if(u.row>=s&&u.column>=o){let t=e(s,o,this.tileWidth,this.tileHeight),i=Math.abs(f-t.x),h=r+l-t.y-l;if(i<.5*this.tileWidth&&h<this.tileHeight*(1+i/this.tileWidth))return!0}}return!1},drawImages:function(t,i,e){e=e||function(){return 0},this.forEach(function(s,h){let o=e(this.tiles[s][h]),n=i(this.tiles[s][h]);this.drawTileImage(t,n,s,h,o)}.bind(this))},drawShapes:function(t,i,e){e=e||function(){return 0},this.forEach(function(s,h){let o=e(this.tiles[s][h]);this.drawTileShape(t,s,h,o),i()}.bind(this))},drawTileImage:function(t,i,s,h,o){o=o||0;let n=e(s,h,this.tileWidth,this.tileHeight),l=(n={x:n.x+this.offsetX,y:n.y+this.offsetY}).x-.5*this.tileWidth,f=n.y-o,r=this.tileWidth,u=this.tileHeight+o;t.drawImage(i,l,f,r,u)},drawTileShape:function(t,i,s,h){h=h||0;let n=e(i,s,this.tileWidth,this.tileHeight);o(t,(n={x:n.x+this.offsetX,y:n.y+this.offsetY-h}).x,n.y,this.tileWidth,this.tileHeight)}},Tile.prototype={drawImage:function(t,i,e,s){let h=e-.5*this.width,o=s-this.offsetHeight,n=this.width,l=this.height+this.offsetHeight;t.drawImage(i,h,o,n,l)},drawShape:function(t,i,e){o(t,i,e-this.offsetHeight,this.width,this.height)}},{cartesianToIsometric:i,isometricToCartesian:t,tileToCartesian:e,cartesianToTileFloat:s,cartesianToTile:h,Renderer:Renderer,TiledMap:TiledMap,Tile:Tile}});
